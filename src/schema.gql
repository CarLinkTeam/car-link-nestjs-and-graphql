# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  email: String!
  fullName: String!
  location: String!
  phone: String!
  isActive: Boolean!
  roles: [String!]!
}

type UserResponse {
  user: User!
}

type UsersResponse {
  users: [User!]!
}

type UserDeleteResponse {
  message: String!
  success: Boolean!
}

type AuthReponse {
  user: User!
  token: String!
}

type Vehicle {
  id: ID!
  vehicleModel: String!
  make: String!
  color: String!
  year: Int!
  license_plate: String!
  url_photos: [String!]!
  daily_price: Float!
  rental_conditions: String!
  class: String
  drive: String
  fuel_type: String
  transmission: String
  createdAt: DateTime!
  updatedAt: DateTime!
  owner: User!
  ownerId: ID!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type VehicleResponse {
  vehicle: Vehicle!
}

type VehiclesResponse {
  vehicles: [Vehicle!]!
}

type Rental {
  id: ID!
  initialDate: DateTime!
  finalDate: DateTime!
  totalCost: Float!
  status: String!
  client: User!
  client_id: ID!
  vehicle: Vehicle!
  vehicle_id: ID!
}

type RentalResponse {
  rental: Rental!
}

type RentalsResponse {
  rentals: [Rental!]!
}

type RentalStatusResponse {
  message: String!
  rental: Rental!
}

type Query {
  hello: String!

  """Get all active users in the system (Admin only)"""
  findAllUsers: UsersResponse!

  """Get a specific user by ID (Admin only)"""
  findUserById(
    """User ID to retrieve"""
    id: String!
  ): UserResponse!

  """Get the authenticated user profile"""
  getMyProfile: UserResponse!
  findMyVehicles: VehiclesResponse!
  findMyVehicle(id: String!): VehicleResponse!

  """Get all rentals for the authenticated user as a client"""
  findMyRentals: RentalsResponse!

  """Get all rentals for vehicles owned by the authenticated user"""
  findMyOwnerRentals: RentalsResponse!

  """Get a specific rental by ID"""
  findOneRental(
    """Rental ID"""
    id: String!
  ): RentalResponse!
}

type Mutation {
  signup(signInput: RegisterAuthDto!): AuthReponse!
  login(loginInput: LoginAuthDto!): AuthReponse!
  promoteToOwner(id: String!): AuthReponse!
  promoteToAdmin(id: String!): AuthReponse!

  """Update any user information (Admin only)"""
  updateUser(
    """User ID to update"""
    id: String!

    """User update data"""
    updateInput: UpdateUserDto!
  ): UserResponse!

  """Update the authenticated user profile"""
  updateMyProfile(
    """Profile update data"""
    updateInput: UpdateUserDto!
  ): UserResponse!

  """Deactivate any user account (Admin only)"""
  deleteUser(
    """User ID to delete"""
    id: String!
  ): UserDeleteResponse!

  """Deactivate the authenticated user account"""
  deleteMyAccount: UserDeleteResponse!
  create(createInput: CreateVehicleDto!): VehicleResponse!
  update(updateInput: UpdateVehicleDto!, id: String!): VehicleResponse!
  deleteVehicle(id: String!): Boolean!

  """Create a new rental request"""
  createRental(
    """Rental data"""
    createInput: CreateRentalDto!
  ): RentalResponse!

  """Update an existing rental (only pending rentals)"""
  updateRental(
    """Rental ID"""
    id: String!

    """Updated rental data"""
    updateInput: UpdateRentalDto!
  ): RentalResponse!

  """Confirm a pending rental (vehicle owners only)"""
  confirmRental(
    """Rental ID"""
    id: String!
  ): RentalStatusResponse!

  """Reject a pending rental (vehicle owners only)"""
  rejectRental(
    """Rental ID"""
    id: String!
  ): RentalStatusResponse!

  """Delete a rental (administrators only)"""
  deleteRental(
    """Rental ID"""
    id: String!
  ): Boolean!
}

input RegisterAuthDto {
  """Full name of the user"""
  fullName: String! = "John Doe"

  """Password with uppercase, lowercase, and a number or special character"""
  password: String! = "Password123!"

  """User email address"""
  email: String! = "john.doe@example.com"

  """User location or city"""
  location: String! = "New York"

  """Phone number with country code. Format: +[country_code][number]"""
  phone: String! = "+12345678901"
}

input LoginAuthDto {
  email: String!
  password: String!
}

input UpdateUserDto {
  """Full name of the user"""
  fullName: String

  """Phone number with country code. Format: +[country_code][number]"""
  phone: String

  """User location or city"""
  location: String

  """
  New password with uppercase, lowercase, and a number or special character
  """
  password: String
}

input CreateVehicleDto {
  vehicleModel: String!
  make: String!
  color: String!
  year: Int!
  license_plate: String!
  url_photos: [String!]!
  daily_price: Float!
  rental_conditions: String!
  class: String
  drive: String
  fuel_type: String
  transmission: String
}

input UpdateVehicleDto {
  vehicleModel: String
  make: String
  color: String
  year: Int
  license_plate: String
  url_photos: [String!]
  daily_price: Float
  rental_conditions: String
  class: String
  drive: String
  fuel_type: String
  transmission: String
}

input CreateRentalDto {
  initialDate: DateTime!
  finalDate: DateTime!
  totalCost: Float!
  status: String!
  vehicle_id: ID!
}

input UpdateRentalDto {
  initialDate: DateTime
  finalDate: DateTime
  totalCost: Float
  status: String
  vehicle_id: ID
}